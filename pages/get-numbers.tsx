import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useActions } from '../redux';
import styles from '../styles/GetListNumber.module.scss';
import { AiFillStar } from 'react-icons/ai';

const GetNumbers: NextPage = () => {
    const dispatch = useDispatch();
    const actions = useActions();

    const numbers = useSelector((state: any) => state.global.numbers);

    useEffect(() => {
        dispatch(actions.GlobalActions.getListNumbers());
    }, []);

    const renderNumBlock = (num: any, index: any = '') => {
        let digits = [];
        for (let index = 0; index < num.length; index++)
            digits.push(num[index]);

        return (
            <div className={styles.NumBlock} key={index}>
                {digits.map((digit: any, index: any) => {
                    return (
                        <div key={'digit' + index} className={styles.Digit}>
                            {digit}
                        </div>
                    );
                })}
            </div>
        );
    };

    return (
        <div className={styles.GetListNumber}>
            <Head>
                <title>Get Numbers Page</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className={styles.MainTable}>
                {/* {
                    numbers.secondNum && numbers.secondNum[0]
                } */}
                <div className={styles.rowTitle}>
                    <div className={styles.title}>XSKT Vietlott, 17/12/21</div>
                    <AiFillStar className={styles.star} />
                </div>

                <div className={styles.BlockNumber}>
                    <div className={styles.BlockTitle}>1st Prize</div>
                    <div className={styles.BlockContent}>
                        {numbers.firstNum &&
                            numbers.firstNum.map((num: any, index: any) => {
                                return renderNumBlock(num, 'key1' + index);
                            })}
                    </div>
                </div>

                <div className={styles.BlockNumber}>
                    <div className={styles.BlockTitle}>2nd Prize</div>
                    <div className={styles.BlockContent}>
                        {numbers.secondNum &&
                            numbers.secondNum.map((num: any, index: any) => {
                                return renderNumBlock(num, 'key2' + index);
                            })}
                    </div>
                </div>

                <div className={styles.BlockNumber}>
                    <div className={styles.BlockTitle}>3rd Prize</div>
                    <div className={styles.BlockContent}>
                        {numbers.thirdNum &&
                            numbers.thirdNum.map((num: any, index: any) => {
                                return renderNumBlock(num, 'key3' + index);
                            })}
                    </div>
                </div>

                <div className={styles.BlockNumber}>
                    <div className={styles.BlockTitle}>Consolation prize</div>
                    <div className={styles.BlockContent}>
                        {numbers.encourageNum &&
                            numbers.encourageNum.map((num: any, index: any) => {
                                return renderNumBlock(num, 'key4' + index);
                            })}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default GetNumbers;
